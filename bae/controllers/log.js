// Generated by CoffeeScript 1.7.1
(function() {
  var Client, Error, Log, auth, models;

  models = require('../models');

  Log = models.Log;

  auth = require('../lib/auth');

  Error = require('../lib/error');

  Client = models.Client;

  module.exports = function(app) {
    return app.get('/logs', function(req, res) {
      var data, query;
      data = req.query;
      query = {};
      if (!data.perPage) {
        data.perPage = 100;
      }
      if (!data.page) {
        data.page = 1;
      }
      return Log.aggregate().match(query).project({
        username: '$client',
        c: '$count'
      }).group({
        _id: "$username",
        count: {
          $sum: '$c'
        }
      }).sort({
        count: -1
      }).skip(data.perPage * (data.page - 1)).limit(data.perPage).exec(function(err, result) {
        var count, ids;
        if (err) {
          return Error(err, res);
        } else {
          ids = [];
          count = {};
          result.forEach(function(log) {
            ids.push(log._id);
            return count[log._id] = log.count;
          });
          return Client.find({
            '_id': {
              $in: ids
            }
          }, 'username', function(err, result) {
            var arr, num;
            arr = [];
            num = 1000;
            result.forEach(function(u) {
              return arr.push({
                username: u.username,
                count: count[u._id],
                dm: Math.round(num * Math.random()),
                received: Math.round(num * Math.random()),
                confirmed: Math.round(num * Math.random())
              });
            });
            arr.sort(function(a, b) {
              return -a.count + b.count;
            });
            return res.json({
              status: true,
              results: arr
            });
          });
        }
      });
    });
  };

}).call(this);

//# sourceMappingURL=log.map
