// Generated by CoffeeScript 1.7.1
(function() {
  var ModalInstanceCtrl, songs;

  songs = angular.module('SongApp', ['ngGrid', 'ngRoute', 'ngTagsInput', 'ui.bootstrap']);

  songs.controller('SongCtrl', function($scope, $http, $modal, $q, $filter, $window, $timeout) {
    var choosedFiles, data, done, fileDic, listUri, objectUrl, parseFiles, parseIndex, postSong, updateStatus, updateStatusUri, uploaded, uploader;
    listUri = '/song/list';
    updateStatusUri = '/song/update/status';
    configScopeForNgGrid($scope);
    $scope.module = 'templates/html/song/home.html';
    $scope.search = function() {
      $scope.page = 1;
      $scope.list = null;
      return $scope.getList();
    };
    $scope.getList = function() {
      var tags;
      tags = '';
      if ($scope.s_tags) {
        tags = [];
        $scope.s_tags.forEach(function(tag) {
          return tags.push(tag.text);
        });
        tags = tags.join(',');
      }
      return $http.get(listUri, {
        params: {
          name: $scope.searchText,
          tags: tags,
          page: $scope.page,
          perPage: 20
        }
      }).success(function(result) {
        if (result.status) {
          $scope.count = result.count;
          if (!$scope.list) {
            return $scope.list = result.results;
          } else if (result.results && result.results.length) {
            return result.results.forEach(function(item) {
              return $scope.list.push(item);
            });
          } else {
            return showAlert('没有更多的数据了');
          }
        } else {
          return showAlert(result.error);
        }
      });
    };
    $scope.getList();
    $scope.updateStatus = function(data) {
      if (!data.disabled) {
        return confirm(2, '媒资状态更新', '是否确认禁用该媒资，一旦禁用后创建歌单时将不能再选中该媒资', function(value) {
          if (value) {
            return updateStatus(data);
          }
        });
      } else {
        return updateStatus(data);
      }
    };
    updateStatus = function(data) {
      $scope.updating = true;
      data.disabled = !data.disabled;
      return $http.post(updateStatusUri, {
        _id: data._id,
        disabled: data.disabled
      }).success(function(result) {
        if (!result.status) {
          showAlert(result.error);
        }
        return $scope.updating = false;
      });
    };
    $scope.page = 1;
    $scope.$on('ngGridEventScroll', function() {
      $scope.page++;
      return $scope.getList();
    });
    $scope.dataGrid = {
      data: 'list',
      multiSelect: false,
      enableRowSelection: false,
      enableSorting: false,
      enableHighlighting: true,
      rowHeight: 40,
      columnDefs: [
        {
          field: "name",
          displayName: "名称",
          cellTemplate: textCellTemplate
        }, {
          field: "tags",
          displayName: "标签",
          cellTemplate: textCellTemplate
        }, {
          field: "artist",
          displayName: "歌手",
          cellTemplate: textCellTemplate
        }, {
          field: "album",
          displayName: "专辑",
          cellTemplate: textCellTemplate
        }, {
          field: "published_at",
          width: 96,
          displayName: "发行时间",
          cellTemplate: textCellTemplate
        }, {
          field: "right_date",
          width: 96,
          displayName: "版权到期",
          cellTemplate: dateCellTemplate
        }, {
          field: "handler",
          displayName: "操作",
          width: 150,
          cellTemplate: '<div class="row" ng-style="{height: rowHeight}"> <div class="col-md-12 text-center" style="padding: 0px; display: inline-block; vertical-align: middle; margin-top: 8px"> <a class="btn btn-default btn-xs" ng-click="try(row.entity)">试听</a> <a class="btn btn-primary btn-xs" ng-click="edit(row.entity)">编辑</a> <a class="btn btn-xs" ng-class="getButtonStyle(row.getProperty(\'disabled\'))" ng-click="updateStatus(row.entity)" ng-disabled="updating">{{ isDisabled(row.getProperty("disabled")) }}</a></div></div>'
        }
      ]
    };
    $scope["try"] = function(data) {
      $window.open(imgHost + data.url + '?p/1/avthumb/mp3/ab/64k');
      return true;
    };
    $scope.edit = function(data) {
      $scope.data = data;
      return $scope.open();
    };
    $scope.multiGrid = {
      data: 'tobeUploadedFiles',
      multiSelect: false,
      enableRowSelection: false,
      enableSorting: false,
      enableHighlighting: true,
      rowHeight: 40,
      columnDefs: [
        {
          field: "name",
          displayName: "名称",
          cellTemplate: textCellTemplate
        }, {
          field: "duration",
          displayName: "时长",
          cellTemplate: durationTemplate
        }, {
          field: "tags",
          displayName: "标签",
          cellTemplate: textCellTemplate
        }, {
          field: "artist",
          displayName: "歌手",
          cellTemplate: textCellTemplate
        }, {
          field: "album",
          displayName: "专辑",
          cellTemplate: textCellTemplate
        }, {
          field: "published_at",
          width: 96,
          displayName: "发行时间",
          cellTemplate: textCellTemplate
        }, {
          field: "right_date",
          width: 96,
          displayName: "版权到期",
          cellTemplate: dateCellTemplate
        }, {
          field: "percent",
          width: 60,
          displayName: "进度",
          cellTemplate: textCellTemplate
        }
      ]
    };
    data = '';
    choosedFiles = '';
    objectUrl = '';
    parseIndex = 0;
    done = 2;
    fileDic = {};
    $("#audio2").on("canplaythrough", function(e) {
      data.duration = Math.round(e.currentTarget.duration);
      URL.revokeObjectURL(objectUrl);
      done++;
      return $scope.$apply(function() {
        return parseFiles();
      });
    });
    parseFiles = function() {
      var File, file;
      if (done === 2 && data) {
        $scope.tobeUploadedFiles.push(data);
      }
      if (parseIndex === choosedFiles.length || done !== 2) {
        if (parseIndex === choosedFiles.length && done === 2) {
          console.log($scope.tobeUploadedFiles.length, 'ok', parseIndex, choosedFiles.length, done);
        }
        return;
      }
      done = 0;
      data = {};
      file = choosedFiles[parseIndex];
      fileDic[file.name] = data;
      parseIndex++;
      File = file.getSource().getSource();
      objectUrl = URL.createObjectURL(File);
      $("#audio2").prop("src", objectUrl);
      return ID3.loadTags(file.name, function() {
        var arr, comment, tags;
        tags = ID3.getAllTags(file.name);
        data.name = tags.title;
        data.artist = tags.artist;
        data.album = tags.album;
        data.published_at = tags.year;
        data.size = file.size;
        if (tags.comment) {
          comment = tags.comment.text;
        }
        if (comment) {
          arr = comment.split('|');
          arr.forEach(function(o) {
            var a2, key, value;
            a2 = o.split('=');
            if (a2.length === 2) {
              key = a2[0];
              value = a2[1];
              switch (key) {
                case 'c':
                  return data.company = value;
                case 't':
                  return data.tags = value.split(',');
                case 'ci':
                  return data.writer = value;
                case 'qu':
                  return data.composer = value;
                case 'r':
                  return data.right_date = value;
              }
            }
          });
        }
        done++;
        return $scope.$apply(function() {
          return parseFiles();
        });
      }, {
        tags: ["artist", "title", "album", "year", "comment", "track", "genre", "lyrics", "picture"],
        dataReader: FileAPIReader(File)
      });
    };
    $scope.tobeUploadedFiles = [];
    $scope.startUpload = function() {
      if (choosedFiles && choosedFiles.length) {
        $scope.buttonDisabled = true;
        return uploader.start();
      }
    };
    uploader = '';
    uploaded = 0;
    $scope.addMulti = function() {
      $scope.module = 'templates/html/song/multi.html';
      return $timeout(function() {
        return uploader = Qiniu.uploader({
          runtimes: 'html5,flash,html4',
          browse_button: 'p11',
          uptoken_url: '/upload/token/mp3',
          unique_names: true,
          max_retries: 3,
          chunk_size: '4mb',
          filters: {
            mime_types: [
              {
                title: 'mp3媒资',
                extensions: 'mp3'
              }
            ]
          },
          unique_names: true,
          domain: imgHost,
          container: 'c11',
          max_file_size: '100mb',
          flash_swf_url: 'js/plupload/Moxie.swf',
          max_retries: 1,
          auto_start: false,
          init: {
            'FilesAdded': function(up, files) {
              var has, temp;
              if (choosedFiles && choosedFiles.length) {
                choosedFiles.forEach(function(file) {
                  return uploader.removeFile(file);
                });
              }
              console.log('cf', files.length, choosedFiles);
              choosedFiles = files;
              temp = {};
              has = false;
              files.forEach(function(file) {
                if (temp[file.name]) {
                  confirm(1, '出错', '上传文件名称不能存在相同的');
                  has = true;
                } else {
                  return temp[file.name] = true;
                }
              });
              if (!has) {
                return $scope.$apply(function() {
                  data = '';
                  parseIndex = 0;
                  uploaded = 0;
                  $scope.tobeUploadedFiles.length = 0;
                  parseFiles();
                  return $scope.msg = '选择了 ' + choosedFiles.length + ' 文件';
                });
              }
            },
            'UploadComplete': function() {
              return $scope.$apply(function() {
                $scope.buttonDisabled = false;
                choosedFiles = null;
                console.log('all uploaded');
                return $scope.msg = '全部上传完毕，共计' + uploaded;
              });
            },
            'FileUploaded': function(up, file, info) {
              data = fileDic[file.name];
              info = angular.fromJson(info);
              return $scope.$apply(function() {
                data.url = info.key;
                console.log('uploaded', file.name, data);
                return postSong(data);
              });
            },
            'UploadProgress': function(up, file) {
              console.log('uploading', file.name, file.percent);
              data = fileDic[file.name];
              return $scope.$apply(function() {
                return data.percent = file.percent + '%';
              });
            },
            'Error': function(up, err, errTip) {
              $scope.msg = err;
              return $scope.buttonDisabled = false;
            }
          }
        });
      }, 500);
    };
    postSong = function(data) {
      return $http.post('/song/add', data).success(function(result) {
        if (!result.status) {
          confirm(1, '添加到服务器出错', result.error);
          $scope.buttonDisabled = false;
          $scope.msg = '点击开始再试试';
          return uploader.stop();
        } else {
          uploaded++;
          return $scope.msg = '已上传 ' + uploaded + '/' + parseIndex + ' ';
        }
      }).error(function(error) {
        confirm(1, '添加到服务器出错', result.error);
        $scope.buttonDisabled = false;
        $scope.msg = '点击开始再试试';
        return uploader.stop();
      });
    };
    $scope.back = function() {
      $scope.module = 'templates/html/song/home.html';
      return $scope.search();
    };
    $scope.add = function() {
      $scope.data = {};
      $scope.open();
    };
    $scope.tags = [];
    getDict($http, 'SongTags', function(result) {
      if (result && result.list && result.list.length) {
        return result.list.forEach(function(tag) {
          if (typeof tag === 'string') {
            return $scope.tags.push({
              text: tag
            });
          } else {
            return $scope.tags.push(tag);
          }
        });
      }
    });
    $scope.loadTags = function(query) {
      var deffered;
      deffered = $q.defer();
      deffered.resolve($filter('filter')($scope.tags, query));
      return deffered.promise;
    };
    $scope.open = function() {
      var modalInstance;
      modalInstance = $modal.open({
        templateUrl: 'modal.html',
        controller: ModalInstanceCtrl,
        backdrop: 'static',
        resolve: {
          data: function() {
            return $scope.data;
          },
          http: function() {
            return $http;
          },
          tags: function() {
            return $scope.tags;
          }
        }
      });
      modalInstance.result.then((function(data) {
        if (!$scope.list) {
          $scope.list = [];
        }
        if (data === 'refresh') {
          $scope.list = null;
          $scope.page = 1;
          $scope.getList();
        } else if (data) {
          $scope.list.unshift(data);
        }
      }), function() {});
    };
  });

  ModalInstanceCtrl = function($scope, $timeout, $modalInstance, data, tags, http, $q, $filter) {
    var coverUplaoded, mp3Uploaded, objectUrl;
    $scope.data = angular.copy(data);
    $scope.buttonDisabled = false;
    $scope.tags = tags;
    $scope.label = '上传媒资';
    if (data._id) {
      $scope.update = true;
      $scope.title = '编辑媒资';
      $scope.cover = imgHost + $scope.data.cover + '?imageView2/1/w/200/h/200';
    } else {
      $scope.title = '新增媒资';
    }
    $scope.loadTags = function(query) {
      var deffered;
      deffered = $q.defer();
      deffered.resolve($filter('filter')($scope.tags, query));
      return deffered.promise;
    };
    mp3Uploaded = data ? false : true;
    coverUplaoded = data ? true : true;
    objectUrl = '';
    $("#audio").on("canplaythrough", function(e) {
      $scope.data.duration = e.currentTarget.duration;
      console.log($scope.data.duration);
      return URL.revokeObjectURL(objectUrl);
    });
    $timeout(function() {
      var uploader;
      uploader = Qiniu.uploader({
        runtimes: 'html5,flash,html4',
        browse_button: 'p1',
        uptoken_url: '/upload/token/mp3',
        prevent_duplicates: true,
        filters: {
          mime_types: [
            {
              title: 'mp3媒资',
              extensions: 'mp3'
            }
          ]
        },
        unique_names: true,
        domain: imgHost,
        container: 'c1',
        max_file_size: '100mb',
        flash_swf_url: 'js/plupload/Moxie.swf',
        max_retries: 1,
        auto_start: true,
        init: {
          'FilesAdded': function(up, files) {
            var File, file;
            file = files[0];
            $scope.buttonDisabled = true;
            data = $scope.data;
            File = file.getSource().getSource();
            objectUrl = URL.createObjectURL(File);
            $("#audio").prop("src", objectUrl);
            return ID3.loadTags(file.name, function() {
              var arr, comment;
              tags = ID3.getAllTags(file.name);
              console.log(tags);
              data.name = tags.title;
              data.artist = tags.artist;
              data.album = tags.album;
              data.published_at = tags.year;
              data.size = file.size;
              if (tags.comment) {
                comment = tags.comment.text;
              }
              if (comment) {
                arr = comment.split('|');
                return arr.forEach(function(o) {
                  var a2, key, value;
                  a2 = o.split('=');
                  if (a2.length === 2) {
                    key = a2[0];
                    value = a2[1];
                    switch (key) {
                      case 'c':
                        return data.company = value;
                      case 't':
                        return data.tags = value.split(',');
                      case 'ci':
                        return data.writer = value;
                      case 'qu':
                        return data.composer = value;
                      case 'r':
                        return data.right_date = value;
                    }
                  }
                });
              }
            }, {
              tags: ["artist", "title", "album", "year", "comment", "track", "genre", "lyrics", "picture"],
              dataReader: FileAPIReader(File)
            });
          },
          'FileUploaded': function(up, file, info) {
            data = angular.fromJson(info);
            console.log(data);
            return $timeout(function() {
              $scope.data.url = data.key;
              $scope.msg = '上传成功';
              $scope.percent = 0;
              mp3Uploaded = true;
              if (coverUplaoded) {
                return $scope.buttonDisabled = false;
              }
            }, 500);
          },
          'UploadProgress': function(up, file) {
            $scope.$apply(function() {
              $scope.percent = file.percent;
              return $scope.msg = file.percent + "%";
            });
            return console.log(file.percent);
          },
          'Error': function(up, err, errTip) {
            $scope.msg = err;
            return $scope.buttonDisabled = false;
          }
        }
      });
      return $scope.imgProgress = '上传封面';
    }, 500);
    $scope.cancel = function() {
      $modalInstance.close();
    };
    $scope.ok = function() {
      var msg;
      if (!$scope.data.name) {
        msg = '媒资名称必填';
      } else if (!$scope.data.url) {
        msg = '媒资尚未上传';
      }
      if (msg) {
        $scope.msg = msg;
        return;
      } else {
        $scope.buttonDisabled = true;
        tags = [];
        if ($scope.data.tags) {
          $scope.data.tags.forEach(function(tag) {
            if (typeof tag === 'string') {
              return tags.push(tag);
            } else {
              return tags.push(tag.text);
            }
          });
        }
        $scope.data.tags = tags;
        if ($scope.update) {
          http.post('/song/update', $scope.data).success(function(result) {
            if (result.status) {
              return $modalInstance.close('refresh');
            } else {
              $scope.msg = result.results;
              return $scope.buttonDisabled = false;
            }
          }).error(function(error) {
            $scope.msg = '出错了，请稍后再试';
            return $scope.buttonDisabled = false;
          });
        } else {
          http.post('/song/add', $scope.data).success(function(result) {
            if (result.status) {
              return $modalInstance.close('refresh');
            } else {
              $scope.msg = result.error;
              return $scope.buttonDisabled = false;
            }
          }).error(function(error) {
            $scope.msg = '出错了，请稍后再试';
            return $scope.buttonDisabled = false;
          });
        }
      }
    };
  };

  angular.element(document).ready(function() {
    return angular.bootstrap(document.getElementById("songDiv"), ['SongApp']);
  });

}).call(this);

//# sourceMappingURL=songs.map
