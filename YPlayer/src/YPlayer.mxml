<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   creationComplete="inited(event)"
					   preinitialize="pre(event)"
					   showStatusBar="false"
					   skinClass="skins.AppSkin"
					   preloader="views.preloaders.CustomPreloader" 
					   mouseDown="nativeWindow.startMove()"
					   xmlns:nativeApplicationUpdater="com.youli.nativeApplicationUpdater.*" xmlns:views="views.*">
	<fx:Script>
		<![CDATA[
			import com.youli.components.LMouseData;
			import com.youli.messengers.PreloaderMessenger;
			
			import mx.events.FlexEvent;
			import mx.managers.ToolTipManager;
			
			import air.update.events.StatusUpdateEvent;
			import air.update.events.UpdateEvent;
			
			import controllers.AC;
			
			protected function inited(event:FlexEvent):void
			{
				ToolTipManager.showEffect=fadeIn;
				ToolTipManager.hideEffect=fadeOut;
				ToolTipManager.showDelay=0;
				
				var l:LMouseData = new LMouseData();
				Mouse.registerCursor('busy', l.mouseCursorData);
				
				if(AC.i.isMac)
					enter();
//					TweenLite.delayedCall(3, enter);
				else
					enter();
				
				if(NativeApplication.supportsStartAtLogin && !Capabilities.isDebugger)
					nativeApplication.startAtLogin = true;
			}
			
			protected function pre(event:FlexEvent):void
			{
				AC.centerWindow(nativeWindow);
				updater.initialize();
			}
			
			protected function updater_initializedHandler(event:UpdateEvent):void
			{
				updater.checkNow();
			}
			
			protected function updater_updateStatusHandler(event:StatusUpdateEvent):void
			{
				if(event.available){
					updater.downloadUpdate();
				}else{
					trace('软件最新');
				}
			}
			
			protected function updater_errorHandler(event:ErrorEvent):void
			{
				trace(event.toString());
			}
			
			protected function updater_downloadCompleteHandler(event:UpdateEvent):void
			{
				updater.installUpdate();				
			}
			
			private function enter():void
			{
				PreloaderMessenger.say(PreloaderMessenger.SHOW_APP);
			}
			
		]]>
	</fx:Script>
	
	<fx:Style source="assets/font/font.css"/>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace views "views.*";
		@namespace nativeApplicationUpdater "com.youli.nativeApplicationUpdater.*";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace components "com.pamakids.components.*";
		global
		{
			fontFamily:"DSF";
			focusThickness:0;
			focusAlpha:0;
		}
		
		components|NiceToolTip.errorTip
		{
			color: "#f8f8f8";
			chromeColor: "0xe02010";
			fontSize: 13;
		}
		
		components|NiceToolTip
		{
			fontSize: 13;
			color:"0x505050";
			chromeColor:"0xe8e8e8";
		}
	</fx:Style>
	
	<fx:Declarations>
		<s:Fade id="fadeIn"
				duration="300"
				alphaFrom="0"
				alphaTo="1"/>
		<s:Fade id="fadeOut"
				duration="100"
				alphaFrom="1"
				alphaTo="0"/>
		<nativeApplicationUpdater:NativeApplicationUpdater id="updater"
														   updateURL="http://yuefumedia.qiniudn.com/update.xml"
														   initialized="updater_initializedHandler(event)"
														   updateStatus="updater_updateStatusHandler(event)"
														   error="updater_errorHandler(event)"
														   downloadError="updater_errorHandler(event)"
														   downloadComplete="updater_downloadCompleteHandler(event)"
														   updateError="updater_errorHandler(event)"
														   />
	</fx:Declarations>
	
	<s:Rect left="2" right="2" top="1" bottom="2">
		<s:fill>
			<s:SolidColor color="0x30373e"/>
		</s:fill>
		<s:filters>
			<s:GlowFilter color="0"/>
		</s:filters>
	</s:Rect>
	
	<views:Main />
	
</s:WindowedApplication>
