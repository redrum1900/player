<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="inited(event)"
		 xmlns:layouts="com.youli.layouts.*">
	<fx:Script>
		<![CDATA[
			import com.greensock.TweenLite;
			import com.pamakids.events.ODataEvent;
			import com.pamakids.manager.FileManager;
			import com.pamakids.manager.LoadManager;
			import com.pamakids.utils.DateUtil;
			import com.pamakids.utils.URLUtil;

			import mx.collections.ArrayCollection;
			import mx.controls.Menu;
			import mx.events.FlexEvent;

			import spark.components.Button;
			import spark.components.Menu;
			import spark.events.IndexChangeEvent;

			import controllers.AA;
			import controllers.API;

			import models.MenuVO;
			import models.TimeVO;

			import skins.buttons.PrimaryButtonSkin;

			[Bindable]
			private var label:String;

			protected function inited(event:FlexEvent):void
			{
//				var ac:ArrayCollection = new ArrayCollection();
//				var startTime:Date = new Date();
//				startTime.hours = 9;
//				startTime.minutes=0;
//				startTime.seconds=0;
//				for(var i:int; i<=120; i++){
//					var vo:SongVO = new SongVO();
//					vo.url = '/assets/temp/1.mp3';
//					vo.cover = '/assets/temp/1.jpg';
//					vo.name = '你听我说';
//					if(i)
//						startTime.minutes += 3;
//					vo.playTime = DateUtil.getdate
//					ac.addItem(vo);
//					if(i == 5)
//					{
//						var ivo:InsertVO = new InsertVO();
//						ivo.name = 'DM插播1';
//						ivo.playTime = DateUtil.getHMS(startTime);
//						ivo.time = "02:00";
//						ivo.repeat = 3;
//						ivo.interval = 60;
//						ac.addItem(ivo);
//					}
//					vo = new SongVO();
//					vo.url = '/assets/temp/2.mp3';
//					vo.cover = '/assets/temp/2.jpg';
//					vo.name = 'Just One Last Dance';
//					startTime.minutes += 3;
//					vo.playTime = DateUtil.getHMS(startTime);
//					ac.addItem(vo);
				var menu:MenuVO;
				API.instance.addEventListener('PLAY', function():void
				{
					menu=API.instance.menu;
					var dmMenu:Object=API.instance.dmMenu;
					songItems=new ArrayCollection(API.instance.songs);
					label='播放项目：' + menu.name + ' 开始日期：' + DateUtil.getYMD(menu.begin_date) + ' 结束日期：' + DateUtil.getYMD(menu.end_date);
					var ac:ArrayCollection=new ArrayCollection();
					ac.addItem({name: '完整列表', type: 1});
					if (dmMenu && dmMenu.dm_list && dmMenu.dm_list.length)
					{
						ac.addItem({name: 'DM列表', type: 2});
					}
					for each (var m:TimeVO in menu.list)
					{
						ac.addItem(m);
					}
					bb.dataProvider=ac;
				});
				API.instance.addEventListener('bros', function():void
				{
					i=0;
					loaded=0;
					buttonsGroup.removeAllElements();
					bros=API.instance.broadcasts;
					createButtons();
					autoload();
				});
				AA.listen('reload', function(e:Event):void
				{
					i=0;
					loaded=0;
					autoload();
				});
//				}
			}

			public function to(index:int):void
			{
				trace(index);
				if (index == -1)
				{
					trace('why');
					return;
				}
				TweenLite.delayedCall(0.5, function():void
				{
					try
					{
						songs.ensureIndexIsVisible(index);
					}
					catch (error:Error)
					{
						trace(error);
					}
				});
			}

			private function getButton(o:Object):Button
			{
				var b:Button=new Button();
				dic[b]=o;
				b.setStyle('skinClass', PrimaryButtonSkin);
				b.label=o.name;
//				var bm:NativeMenu = new NativeMenu();
//				bm.addEventListener(Event.SELECT, navHandler);
				var ni:NativeMenuItem=new NativeMenuItem('删除');
				ni.data=o;
//				bm.addItem(ni);
//				b.contextMenu = bm;
				b.addEventListener(MouseEvent.CLICK, broHandler);
				buttonsGroup.addElement(b);
				b.alpha=0;
				b.addEventListener(FlexEvent.CREATION_COMPLETE, function(e:FlexEvent):void
				{
					var dt:Number=createTime - 0.1;
					if (dt > 0)
						TweenLite.to(b, dt, {alpha: 1});
					createButtons();
					var v:Number=b.y + b.height;
					if (scroller.height < v)
						scroller.height=v < 200 ? b.y + b.height : 200;
				});
				return b;
			}

			private var bros:Array;
			private var i:int;

			private var toload:int;

			private function createButtons():void
			{
				if (bros && i < bros.length)
				{
					getButton(bros[i]);
					i++;
				}
				else
				{
					to(API.instance.playingIndex);
				}
			}

			private var createTime:int=1;

			private var dic:Dictionary=new Dictionary();

			protected function broHandler(event:MouseEvent):void
			{
				dispatchEvent(new ODataEvent(dic[event.currentTarget]));
			}

			private var loaded:int;

			private function autoload():void
			{
				if (loaded != bros.length)
				{
					var vo:Object=bros[loaded];
					var f:File=new File(FileManager.savedDir + URLUtil.getCachePath(vo.url));
					if (f.exists)
					{
						loaded++;
						if (loaded != bros.length)
							autoload();
					}
					else
					{
						LoadManager.instance.load(vo.url, function():void
						{
							loaded++;
							autoload();
						}, URLUtil.getCachePath(vo.url));
					}
				}
				else
				{
					trace('all bro loaded', loaded);
				}
			}

			protected function bb_changeHandler(event:IndexChangeEvent):void
			{
				trace(bb.selectedItem.name);
				var o:Object=bb.selectedItem;
				if (o is TimeVO)
				{
					songItems=new ArrayCollection(o.songs);
				}
				else
				{
					if (o.type == 1)
					{
						songItems=new ArrayCollection(API.instance.songs);
					}
					else if (o.type == 2)
					{
						songItems=new ArrayCollection(API.instance.dmMenu.dm_list);
					}
				}
			}

			[Bindable]
			private var songItems:ArrayCollection;
		]]>
	</fx:Script>
	<s:VGroup gap="0"
			  width="100%"
			  height="100%"
			  paddingLeft="20"
			  paddingRight="20"
			  paddingTop="20"
			  paddingBottom="10">
		<s:Scroller id="scroller"
					mouseDown="event.stopImmediatePropagation()"
					width="100%"
					maxHeight="200"
					skinClass="skins.datagrid.list.ScrollSkin"
					horizontalScrollPolicy="off"
					verticalScrollPolicy="off">
			<s:Group id="buttonsGroup">
				<s:layout>
					<layouts:FlowLayout id="fl"
										horizontalGap="10"
										verticalGap="10"/>
				</s:layout>
			</s:Group>
		</s:Scroller>
		<s:Spacer height="18"/>
		<s:Label color="0xd9dee3"
				 fontSize="14"
				 text="{label}"/>
		<s:Spacer height="18"/>
		<s:ButtonBar id="bb"
					 requireSelection="true"
					 color="0x303941"
					 selectedIndex="0"
					 change="bb_changeHandler(event)"
					 labelField="name"
					 skinClass="skins.buttons.DefaultButtonBarSkin"/>
		<s:Spacer height="8"/>
		<s:Label color="0xd9dee3"
				 fontSize="14"
				 text="播放时间   曲目名称"
				 visible="{label}"/>
		<s:List mouseDown="event.stopImmediatePropagation()"
				skinClass="skins.SongListSkin"
				width="100%"
				height="100%"
				dataProvider="{songItems}"
				itemRenderer="views.components.SongRenderer"
				id="songs">
		</s:List>
	</s:VGroup>
</s:Group>
