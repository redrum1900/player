// Generated by CoffeeScript 1.7.1
(function() {
  var ClientsModalInstanceCtrl, ModalInstanceCtrl, menu;

  menu = angular.module('MenuApp', ['ngGrid', 'ngRoute', 'ngTagsInput', 'ui.bootstrap']);

  menu.controller('MenuCtrl', function($scope, $http, $modal, $q, $filter) {
    var listUri, updateStatus, updateStatusUri, validateTime;
    $scope.module = 'templates/html/menu/home.html';
    listUri = '/menu/list';
    updateStatusUri = '/menu/update/status';
    configScopeForNgGrid($scope);
    configDateForScope($scope);
    $scope.search = function() {
      $scope.page = 1;
      $scope.list = null;
      return $scope.getList();
    };
    $scope.getList = function() {
      var tags;
      tags = '';
      if ($scope.s_tags) {
        tags = [];
        $scope.s_tags.forEach(function(tag) {
          return tags.push(tag.text);
        });
        tags = tags.join(',');
      }
      return $http.get(listUri, {
        params: {
          name: $scope.menuName,
          tags: tags,
          page: $scope.page,
          perPage: 20
        }
      }).success(function(result) {
        if (result.status) {
          if (!$scope.list) {
            return $scope.list = result.results;
          } else if (result.results && result.results.length) {
            return result.results.forEach(function(item) {
              return $scope.list.push(item);
            });
          } else {
            return showAlert('没有更多的数据了');
          }
        } else {
          return showAlert(result.error);
        }
      });
    };
    $scope.getList();
    $scope.updateStatus = function(data) {
      if (!data.disabled) {
        return confirm(2, '歌单状态更新', '是否确认禁用该歌单，一旦禁用后客户将不能再不会再使用该歌单', function(value) {
          if (value) {
            return updateStatus(data);
          }
        });
      } else {
        return updateStatus(data);
      }
    };
    updateStatus = function(data) {
      $scope.updating = true;
      data.disabled = !data.disabled;
      return $http.post(updateStatusUri, {
        _id: data._id,
        disabled: data.disabled
      }).success(function(result) {
        if (!result.status) {
          showAlert(result.error);
        }
        return $scope.updating = false;
      });
    };
    $scope.page = 1;
    $scope.$on('ngGridEventScroll', function() {
      $scope.page++;
      return $scope.getList();
    });
    $scope.dataGrid = {
      data: 'list',
      multiSelect: false,
      enableRowSelection: false,
      enableSorting: false,
      enableHighlighting: true,
      rowHeight: 40,
      columnDefs: [
        {
          field: "name",
          displayName: "名称",
          cellTemplate: textCellTemplate
        }, {
          field: "tags",
          displayName: "标签",
          cellTemplate: textCellTemplate
        }, {
          field: "clients.length",
          displayName: "使用客户",
          cellTemplate: textCellTemplate
        }, {
          field: "begin_date",
          displayName: "开始日期",
          cellTemplate: dateCellTemplate
        }, {
          field: "end_date",
          displayName: "结束日期",
          cellTemplate: dateCellTemplate
        }, {
          field: "creator.username",
          width: 88,
          displayName: "创建者",
          cellTemplate: textCellTemplate
        }, {
          field: "created_at",
          width: 100,
          displayName: "创建时间",
          cellTemplate: dateCellTemplate
        }, {
          field: "handler",
          displayName: "操作",
          width: 150,
          cellTemplate: '<div class="row" ng-style="{height: rowHeight}"> <div class="col-md-12 text-center" style="padding: 0px; display: inline-block; vertical-align: middle; margin-top: 8px"> <a class="btn btn-info btn-xs" ng-click="clients(row.entity)">客户</a> <a class="btn btn-primary btn-xs" ng-click="edit(row.entity)">编辑</a> <a class="btn btn-xs" ng-class="getButtonStyle(row.getProperty(\'disabled\'))" ng-click="updateStatus(row.entity)" ng-disabled="updating">{{ isDisabled(row.getProperty("disabled")) }}</a></div></div>'
        }
      ]
    };
    $scope.songGrid = {
      data: 'time.songs',
      multiSelect: false,
      enableRowSelection: false,
      enableSorting: false,
      enableHighlighting: true,
      rowHeight: 40,
      columnDefs: [
        {
          field: "song.name",
          displayName: "名称",
          cellTemplate: textCellTemplate
        }, {
          field: "time",
          displayName: "播放时间",
          cellTemplate: textCellTemplate
        }, {
          field: "song.duration",
          displayName: "时长（秒）",
          cellTemplate: textCellTemplate
        }, {
          field: "allow_circle",
          displayName: "是否允许随机播放",
          cellTemplate: textCellTemplate
        }, {
          field: "handler",
          displayName: "操作",
          width: 180,
          cellTemplate: '<div class="row" ng-style="{height: rowHeight}"> <div class="col-md-12 text-center" style="padding: 0px; display: inline-block; vertical-align: middle; margin-top: 8px"> <input type="checkbox" style="margin-top: 7px; margin-right: 8px" ng-checked="row.entity.allow_circle" tooltip="允许随机循环" tooltip-append-to-body="true" ng-model="row.entity.allow_circle"> <input style="width: 40px;margin-right: 8px" tooltip-append-to-body="true" ng-model="row.entity.index" tooltip="排序，值越小越靠前"> <a class="btn btn-warning btn-xs" ng-click="removeSong(row.entity)">移除</a> </div></div>'
        }
      ]
    };
    $scope.removeSong = function(song) {
      var arr;
      arr = $scope.time.songs;
      return arr.splice(arr.indexOf(song), 1);
    };
    $scope.edit = function(data) {
      $scope.data = data;
      $scope.time = data.list[0];
      $scope.module = 'templates/html/menu/edit.html';
      return $scope.refreshSongList();
    };
    $scope.add = function() {
      var time;
      time = {
        name: '默认时段',
        active: true
      };
      $scope.data = {
        list: [time]
      };
      $scope.time = time;
      return $scope.module = 'templates/html/menu/edit.html';
    };
    $scope.changeTime = function(time) {
      $scope.time = time;
      return $scope.refreshSongList();
    };
    $scope.back = function() {
      $scope.module = 'templates/html/menu/home.html';
      $scope.list = null;
      return $scope.getList();
    };
    $scope.addTime = function() {
      var time;
      time = {
        name: '新增时段'
      };
      return $scope.data.list.push(time);
    };
    validateTime = function(time) {
      var arr, h, m, wrong;
      if (!time) {
        wrong = true;
      } else {
        wrong = false;
        if (time.indexOf(':') === -1) {
          wrong = true;
        } else {
          arr = time.split(':');
          if (arr.length !== 2) {
            wrong = true;
          } else {
            h = parseInt(arr[0]);
            m = parseInt(arr[1]);
            time = moment({
              hour: h,
              minute: m
            });
            console.log(time, time.isValid());
            if (!time.isValid()) {
              wrong = true;
            }
          }
        }
      }
      if (wrong) {
        confirm(1, '时段开始或结束时间格式不对', '注意冒号格式，应该是 8:00或18:00 这样的');
        return false;
      } else {
        return true;
      }
    };
    $scope.addSong = function() {
      if (validateTime($scope.time.begin) && validateTime($scope.time.end)) {
        return $scope.open();
      }
    };
    $scope.tags = [];
    getDict($http, 'MenuTags', function(result) {
      if (result && result.list && result.list.length) {
        return result.list.forEach(function(tag) {
          console.log(tag);
          if (typeof tag === 'string') {
            return $scope.tags.push({
              text: tag
            });
          } else {
            return $scope.tags.push(tag);
          }
        });
      }
    });
    $scope.loadTags = function(query) {
      var deffered;
      deffered = $q.defer();
      deffered.resolve($filter('filter')($scope.tags, query));
      return deffered.promise;
    };
    $scope.refreshSongList = function() {
      var begin, h, i, m, song, songs, time, _results;
      songs = $scope.time.songs;
      i = 0;
      begin = $scope.time.begin;
      h = begin.split(':')[0];
      m = begin.split(':')[1];
      time = moment({
        hour: h,
        minute: m
      });
      songs.sort(function(a, b) {
        return a.index - b.index;
      });
      _results = [];
      while (i < songs.length) {
        song = songs[i];
        song.index = i;
        song.time = time.format('HH:mm:ss');
        if (song.song.duration) {
          time.add('s', song.song.duration);
        }
        _results.push(i++);
      }
      return _results;
    };
    $scope.saveMenu = function() {
      var list, tags, wrong;
      $scope.handling = false;
      menu = angular.copy($scope.data);
      if (!menu.name) {
        wrong = '歌单名称不能为空';
        return confirm(1, '保存失败', wrong);
      } else {
        list = menu.list;
        list.forEach(function(list) {
          var songs;
          songs = list.songs;
          if (songs) {
            return songs.forEach(function(s) {
              return s.song = s.song._id;
            });
          }
        });
        tags = [];
        if (menu.tags) {
          menu.tags.forEach(function(tag) {
            if (typeof tag === 'string') {
              return tags.push(tag);
            } else {
              return tags.push(tag.text);
            }
          });
        }
        menu.tags = tags;
        if (!menu._id) {
          return $http.post('/menu/add', menu).success(function(result) {
            if (!result.status) {
              showAlert(result.error);
            }
            return confirm(2, '保存成功', '继续编辑或返回歌单列表', function(value) {
              if (!value) {
                return $scope.back();
              }
            }, '继续编辑', '返回列表');
          });
        } else {
          return $http.post('/menu/update', menu).success(function(result) {
            if (!result.status) {
              showAlert(result.error);
            }
            return confirm(2, '保存成功', '继续编辑或返回歌单列表', function(value) {
              if (!value) {
                return $scope.back();
              }
            }, '继续编辑', '返回列表');
          });
        }
      }
    };
    $scope.clients = function(menu) {
      var modalInstance;
      modalInstance = $modal.open({
        templateUrl: 'clients.html',
        controller: ClientsModalInstanceCtrl,
        backdrop: 'static',
        resolve: {
          menu: function() {
            return menu;
          }
        }
      });
      return modalInstance.result.then((function(clients) {
        if (clients) {
          return $http.post('/menu/update', {
            _id: menu._id,
            clients: clients
          }).success(function(result) {
            if (!result.status) {
              showAlert(result.error);
            }
            return $scope.search();
          });
        }
      }), function() {});
    };
    return $scope.open = function() {
      var modalInstance;
      modalInstance = $modal.open({
        templateUrl: 'modal.html',
        controller: ModalInstanceCtrl,
        backdrop: 'static'
      });
      return modalInstance.result.then((function(data) {
        var time;
        if (data) {
          time = $scope.time;
          if (!time.songs) {
            time.songs = [];
          }
          data.forEach(function(s) {
            var has;
            has = false;
            time.songs.forEach(function(s2) {
              if (s._id === s2._id) {
                return has = true;
              }
            });
            if (!has) {
              return time.songs.push({
                song: s
              });
            }
          });
          $scope.refreshSongList();
        }
      }), function() {});
    };
  });

  ClientsModalInstanceCtrl = function($scope, $http, $timeout, $modalInstance, $q, $filter, menu) {
    var choosed, choosedLabel, choosedStyle, listUri, refreshStatus;
    listUri = '/user/list';
    configScopeForNgGrid($scope);
    menu = angular.copy(menu);
    $scope.clients = menu.clients;
    $scope.search = function() {
      $scope.page = 1;
      $scope.list = null;
      return $scope.getList();
    };
    $scope.getList = function() {
      var tags;
      tags = '';
      if ($scope.s_tags) {
        tags = [];
        $scope.s_tags.forEach(function(tag) {
          return tags.push(tag.text);
        });
        tags = tags.join(',');
      }
      return $http.get(listUri, {
        params: {
          username: $scope.searchText,
          tags: tags,
          page: $scope.page,
          perPage: 20
        }
      }).success(function(result) {
        if (result.status) {
          if (!$scope.list) {
            $scope.list = result.results;
            return refreshStatus();
          } else if (result.results && result.results.length) {
            result.results.forEach(function(item) {
              return $scope.list.push(item);
            });
            return refreshStatus();
          } else {
            return showAlert('没有更多的数据了');
          }
        } else {
          return showAlert(result.error);
        }
      });
    };
    refreshStatus = function() {
      return $scope.list.forEach(function(item) {
        item.style = choosedStyle(item);
        return item.label = choosedLabel(item);
      });
    };
    $scope.getList();
    $scope.tags = [];
    getDict($http, 'ClientTags', function(result) {
      if (result && result.list && result.list.length) {
        return result.list.forEach(function(tag) {
          if (typeof tag === 'string') {
            return $scope.tags.push({
              text: tag
            });
          } else {
            return $scope.tags.push(tag);
          }
        });
      }
    });
    $scope.loadTags = function(query) {
      var deffered;
      deffered = $q.defer();
      deffered.resolve($filter('filter')($scope.tags, query));
      return deffered.promise;
    };
    $scope.page = 1;
    $scope.$on('ngGridEventScroll', function() {
      $scope.page++;
      return $scope.getList();
    });
    choosed = function(data) {
      var has;
      has = false;
      $scope.clients.forEach(function(c) {
        if (c === data._id) {
          return has = true;
        }
      });
      return has;
    };
    choosedStyle = function(data) {
      if (choosed(data)) {
        return 'btn-warning';
      } else {
        return 'btn-success';
      }
    };
    $scope.handle = function(data) {
      var i;
      if (choosed(data)) {
        i = 0;
        while (i < $scope.clients.length) {
          if ($scope.clients[i] === data._id) {
            $scope.clients.splice(i, 1);
          }
          i++;
        }
      } else {
        if ($scope.clients.indexOf(data._id) === -1) {
          $scope.clients.push(data._id);
        }
      }
      return refreshStatus();
    };
    choosedLabel = function(data) {
      if (choosed(data)) {
        return '取消';
      } else {
        return '选中';
      }
    };
    $scope.cancel = function() {
      $modalInstance.close();
    };
    $scope.ok = function() {
      $modalInstance.close($scope.clients);
    };
    return $scope.dataGrid = {
      data: 'list',
      multiSelect: false,
      enableRowSelection: false,
      enableSorting: false,
      enableHighlighting: true,
      rowHeight: 40,
      columnDefs: [
        {
          field: "username",
          displayName: "客户名称",
          cellTemplate: textCellTemplate
        }, {
          field: "parent.username",
          displayName: "总部",
          cellTemplate: textCellTemplate
        }, {
          field: "tags",
          displayName: "标签",
          cellTemplate: textCellTemplate
        }, {
          field: "handler",
          displayName: "操作",
          width: 100,
          cellTemplate: '<div class="row" ng-style="{height: rowHeight}"> <div class="col-md-12 text-center" style="padding: 0px; display: inline-block; vertical-align: middle; margin-top: 8px"> <a class="btn btn-xs" ng-class="row.entity.style" ng-click="handle(row.entity)" ng-disabled="updating">{{ row.entity.label }}</a></div></div>'
        }
      ]
    };
  };

  ModalInstanceCtrl = function($scope, $http, $timeout, $modalInstance, $q, $filter) {
    var listUri, updateStatusUri;
    listUri = '/song/list';
    updateStatusUri = '/song/update/status';
    configScopeForNgGrid($scope);
    $scope.title = '插入媒资';
    $scope.search = function() {
      $scope.page = 1;
      $scope.list = null;
      return $scope.getList();
    };
    $scope.getList = function() {
      var tags;
      tags = '';
      if ($scope.s_tags) {
        tags = [];
        $scope.s_tags.forEach(function(tag) {
          return tags.push(tag.text);
        });
        tags = tags.join(',');
      }
      return $http.get(listUri, {
        params: {
          name: $scope.searchText,
          tags: tags,
          page: $scope.page,
          perPage: 20
        }
      }).success(function(result) {
        if (result.status) {
          if (!$scope.list) {
            return $scope.list = result.results;
          } else if (result.results && result.results.length) {
            return result.results.forEach(function(item) {
              return $scope.list.push(item);
            });
          } else {
            return showAlert('没有更多的数据了');
          }
        } else {
          return showAlert(result.error);
        }
      });
    };
    $scope.getList();
    $scope.updateStatus = function(data) {
      $scope.updating = true;
      data.disabled = !data.disabled;
      return $http.post(updateStatusUri, {
        _id: data._id,
        disabled: data.disabled
      }).success(function(result) {
        if (!result.status) {
          showAlert(result.error);
        }
        return $scope.updating = false;
      });
    };
    $scope.page = 1;
    $scope.$on('ngGridEventScroll', function() {
      $scope.page++;
      return $scope.getList();
    });
    $scope.songs = [];
    $scope.choose = function(song) {
      var has;
      has = false;
      $scope.songs.forEach(function(s) {
        if (s._id === song._id) {
          return has = true;
        }
      });
      if (!has) {
        return $scope.songs.push(song);
      }
    };
    $scope.dataGrid = {
      data: 'list',
      multiSelect: false,
      enableRowSelection: false,
      enableSorting: false,
      enableHighlighting: true,
      rowHeight: 40,
      columnDefs: [
        {
          field: "name",
          displayName: "名称",
          cellTemplate: textCellTemplate
        }, {
          field: "handler",
          displayName: "操作",
          width: 100,
          cellTemplate: '<div class="row text-center pagination-centered" ng-style="{height: rowHeight}"> <a style="margin-top: 3px" class="btn btn-success btn-xs" ng-click="choose(row.entity)">选择</a> </div></div>'
        }
      ]
    };
    $scope.tags = [];
    getDict($http, 'SongTags', function(result) {
      if (result && result.list && result.list.length) {
        return result.list.forEach(function(tag) {
          console.log(tag);
          if (typeof tag === 'string') {
            return $scope.tags.push({
              text: tag
            });
          } else {
            return $scope.tags.push(tag);
          }
        });
      }
    });
    $scope.loadTags = function(query) {
      var deffered;
      deffered = $q.defer();
      deffered.resolve($filter('filter')($scope.tags, query));
      return deffered.promise;
    };
    $scope.cancel = function() {
      $modalInstance.close();
    };
    return $scope.ok = function() {
      $modalInstance.close($scope.songs);
    };
  };

  angular.element(document).ready(function() {
    return angular.bootstrap(document.getElementById("menuDiv"), ['MenuApp']);
  });

}).call(this);

//# sourceMappingURL=menu.map
