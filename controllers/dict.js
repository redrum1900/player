// Generated by CoffeeScript 1.7.1
(function() {
  var Dict, DictSchema, Error, Joi, auth, validator;

  auth = require('../lib/auth');

  Dict = require('../models').Dict;

  Error = require('../lib/error');

  Joi = require('joi');

  validator = require('../lib/validator');

  DictSchema = {
    key: Joi.string().required()
  };

  module.exports = function(app) {
    app.get('/dict/get', auth.isAuthenticated(), function(req, res) {
      var data, err;
      data = req.query;
      err = validator.validate(data, DictSchema, {});
      if (err) {
        return res.json({
          status: false,
          error: err
        });
      }
      Dict.findOne({
        key: data.key
      }, 'value list', function(err, result) {
        var arr;
        if (err) {
          return Error(err, res);
        } else {
          if (result) {
            arr = [];
            result.list.forEach(function(r) {
              if (typeof r === 'string') {
                return arr.push(r);
              }
            });
            result.list = arr;
          }
          return res.json({
            status: true,
            results: result
          });
        }
      });
    });
    app.post('/dict/update/list', auth.isAuthenticated(), function(req, res) {
      var data;
      data = req.body;
      delete data['_id'];
      Dict.findOneAndUpdate({
        key: data.key
      }, data, {
        upsert: true
      }, function(err, result) {
        if (err) {
          return Error(err, res);
        } else {
          return res.json({
            status: true
          });
        }
      });
    });
  };

}).call(this);

//# sourceMappingURL=dict.map
