// Generated by CoffeeScript 1.7.1
(function() {
  var auth, logger, qiniu;

  qiniu = require('qiniu');

  auth = require('../lib/auth');

  logger = require('log4js').getDefaultLogger();

  module.exports = function(app) {
    qiniu.conf.ACCESS_KEY = 'xyGeW-ThOyxd7OIkwVKoD4tHZmX0K0cYJ6g1kq4J';
    qiniu.conf.SECRET_KEY = 'bJSwo1--7pa-HD3g7fFHaI6e_TOYP1NCk3Z7XM7G';
    app.get('/upload/token', auth.isAuthenticated(), function(req, res) {
      var putPolicy;
      putPolicy = new qiniu.rs.PutPolicy('yfcdn');
      putPolicy.expires = 3600;
      return res.json({
        uptoken: putPolicy.token()
      });
    });
    app.get('/upload/token/mp3', auth.isAuthenticated(), function(req, res) {
      var putPolicy;
      putPolicy = new qiniu.rs.PutPolicy('yfcdn');
      putPolicy.expires = 3600;
      putPolicy.persistentOps = 'avthumb/mp3/ab/192k;avthumb/mp3/ab/64k';
      return res.json({
        uptoken: putPolicy.token()
      });
    });
    app.get('/upload/token/mp3/auto', auth.isAuthenticated(), function(req, res) {
      var putPolicy;
      putPolicy = new qiniu.rs.PutPolicy('yfcdn');
      putPolicy.expires = 3600;
      putPolicy.persistentOps = 'avthumb/mp3/ab/192k;avthumb/mp3/ab/64k';
      putPolicy.persistentNotifyUrl = 'http://m.yuefu.com/notify';
      putPolicy.callbackUrl = 'http://m.yuefu.com/callback';
      putPolicy.callbackBody = 'size=$(fsize)&info=$(avinfo)';
      return res.json({
        uptoken: putPolicy.token()
      });
    });
    app.post('/notify', function(req, res) {
      logger.trace(JSON.stringify(req.body));
      return res.json({
        status: true,
        data: req.body
      });
    });
    return app.post('/callback', function(req, res) {
      logger.trace(JSON.stringify(req.body));
      return res.json({
        status: true,
        data: req.body
      });
    });
  };

}).call(this);

//# sourceMappingURL=qiniu.map
